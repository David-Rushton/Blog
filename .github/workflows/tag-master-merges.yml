name: Tag master merge

on:
  push:
    branches: [ master ]

jobs:
  tag_release_job:
    runs-on: ubuntu-latest
    name: Tag Release Job

    steps:
    - uses: actions/checkout@v2

    - name: Get Version Number
      id: ver
      run: |
        $xml = [xml](Get-Content -Path "${env:GITHUB_WORKSPACE}/src/common/version.xml" -Raw)
        $version = "v$($xml.version.major).$($xml.version.minor).${env:GITHUB_RUN_ID}"
        Write-Verbose "Returning version: v$version"
        echo "::set-env name=version_number::$version"
      shell: pwsh

    - name: Create a Release
      uses: actions/create-release@v1.1.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.version_number }}
        release_name: "Release ${{ env.version_number }}"
        prerelease: true
        commitish: ${{ github.sha }}

    - name: Slack Notification
      uses: rtCamp/action-slack-notify@master
      env:
        SLACK_CHANNEL: blog
        SLACK_MESSAGE: "A new release has been created"
        SLACK_TITLE: "Release v${{ env.version_number }}"
        SLACK_USERNAME: "Blog Actions"
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
